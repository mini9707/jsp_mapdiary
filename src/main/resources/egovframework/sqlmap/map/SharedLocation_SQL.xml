<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SharedLocation">
    <select id="selectSharedLocationsList" parameterType="long" resultType="map">
        SELECT
            s.shared_id,
            s.location_id,
            s.shared_user_id,
            s.shared_at,
            l.location_nm,
            l.location_desc,
            u.username,
            s.like_count,
            CASE WHEN lk.shared_id IS NOT NULL THEN 'true' ELSE 'false' END as liked
        FROM
            shared_locations s
                INNER JOIN locations l ON s.location_id = l.location_id
                INNER JOIN users u ON s.shared_user_id = u.id
                LEFT JOIN location_likes lk ON s.shared_id = lk.shared_id
                AND lk.user_id = #{value}
        ORDER BY
            s.shared_at DESC
    </select>


    <insert id="insertSharedLocation" parameterType="sharedLocationVO">
        INSERT INTO Shared_Locations (location_id, shared_user_id)
        VALUES (#{locationId}, #{sharedUserId})
    </insert>

    <!-- 공유 장소 삭제 -->
    <delete id="deleteSharedLocation" parameterType="map">
        /* 좋아요 데이터 먼저 삭제 */
        DELETE FROM location_likes
        WHERE shared_id IN (
            SELECT shared_id
            FROM shared_locations
            WHERE location_id = #{locationId}
              AND shared_user_id = #{userId}
        );

        /* 그 다음 공유 장소 삭제 */
        DELETE FROM shared_locations
        WHERE location_id = #{locationId}
          AND shared_user_id = #{userId}
    </delete>

    <!-- 좋아요 추가 -->
    <insert id="insertLike" parameterType="map">
        INSERT INTO location_likes (shared_id, user_id)
        VALUES (#{sharedId}, #{userId}) ON CONFLICT (shared_id, user_id) DO NOTHING
    </insert>

    <!-- 좋아요 제거 -->
    <delete id="deleteLike" parameterType="map">
        DELETE
        FROM location_likes
        WHERE shared_id = #{value}
          AND user_id = #{userId}
    </delete>

    <!-- 좋아요 데이터 삭제 -->
    <delete id="deleteLikesBySharedId" parameterType="int">
        DELETE FROM location_likes
        WHERE shared_id = #{value}
    </delete>

    <!-- 좋아요 카운트 업데이트 -->
    <update id="updateLikeCount" parameterType="int">
        UPDATE shared_locations
        SET like_count = (SELECT COUNT(*)
                          FROM location_likes
                          WHERE shared_id = #{sharedId})
        WHERE shared_id = #{sharedId}
    </update>

    <!-- shared_id 조회 -->
    <select id="getSharedIdByLocationAndUser" parameterType="map" resultType="int">
        SELECT shared_id
        FROM shared_locations
        WHERE location_id = #{locationId}
          AND shared_user_id = #{userId}
    </select>

    <!-- shared_id 조회 -->
    <select id="getSharedIdByLocationId" parameterType="int" resultType="int">
        SELECT shared_id
        FROM shared_locations
        WHERE location_id = #{value}
    </select>

    <!-- 좋아요 수 조회 -->
    <select id="getLikeCount" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM location_likes
        WHERE shared_id = #{value}
    </select>
</mapper>